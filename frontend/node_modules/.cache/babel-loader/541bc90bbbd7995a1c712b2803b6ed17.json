{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\edwis\\\\Documents\\\\CURSOS EM GERAL\\\\Curso Node.js do Zero a Maestria com diversos Projetos\\\\15_GET_A_PET_1\\\\frontend\\\\src\\\\components\\\\pages\\\\Pet\\\\EditPet.js\",\n    _s = $RefreshSig$();\n\nimport api from '../../../utils/api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styles from './AddPet.module.css';\nimport PetForm from '../../form/PetForm';\n/* hooks */\n\nimport useFlashMessage from '../../../hooks/useFlashMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditPet() {\n  _s();\n\n  const [pet, setPet] = useState({});\n  const [token] = useState(localStorage.getItem('token') || '');\n  const {\n    id\n  } = useParams();\n  const {\n    setFlashMessage\n  } = useFlashMessage();\n  useEffect(() => {\n    api.get(`/pets/${id}`, {\n      headers: {\n        Authorization: `Bearer ${JSON.parse(token)}`\n      }\n    }).then(response => {\n      setPet(response.data.pet);\n    });\n  }, [token, id]);\n\n  async function updatePet(pet) {\n    let msgType = 'success';\n    const formData = new FormData();\n    const petFormData = await Object.keys(pet).forEach(key => {\n      if (key === 'images') {\n        for (let i = 0; i < pet[key].length; i++) {\n          formData.append(`images`, pet[key][i]);\n        }\n      } else {\n        formData.append(key, pet[key]);\n      }\n    });\n    formData.append('pet', petFormData);\n    const data = await api.patch(`pets/${pet._id}`, formData, {\n      headers: {\n        Authorization: `Bearer ${JSON.parse(token)}`,\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      return response.data;\n    }).catch(err => {\n      msgType = 'error';\n      return err.response.data;\n    });\n    setFlashMessage(data.message, msgType);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.addpet_header,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Editando o Pet: \", pet.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Depois da edi\\xE7\\xE3o os dados ser\\xE3o atualizados no sistema\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), pet.name && /*#__PURE__*/_jsxDEV(PetForm, {\n      handleSubmit: updatePet,\n      petData: pet,\n      btnText: \"Editar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditPet, \"F4FE5RwCbMKe3l3bcnSrm7TAOBI=\", false, function () {\n  return [useParams, useFlashMessage];\n});\n\n_c = EditPet;\nexport default EditPet;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPet\");","map":{"version":3,"sources":["C:/Users/edwis/Documents/CURSOS EM GERAL/Curso Node.js do Zero a Maestria com diversos Projetos/15_GET_A_PET_1/frontend/src/components/pages/Pet/EditPet.js"],"names":["api","useState","useEffect","useParams","styles","PetForm","useFlashMessage","EditPet","pet","setPet","token","localStorage","getItem","id","setFlashMessage","get","headers","Authorization","JSON","parse","then","response","data","updatePet","msgType","formData","FormData","petFormData","Object","keys","forEach","key","i","length","append","patch","_id","catch","err","message","addpet_header","name"],"mappings":"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","sourcesContent":["import api from '../../../utils/api'\n\nimport { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\n\nimport styles from './AddPet.module.css'\n\nimport PetForm from '../../form/PetForm'\n\n/* hooks */\nimport useFlashMessage from '../../../hooks/useFlashMessage'\n\nfunction EditPet() {\n  const [pet, setPet] = useState({})\n  const [token] = useState(localStorage.getItem('token') || '')\n  const { id } = useParams()\n  const { setFlashMessage } = useFlashMessage()\n\n  useEffect(() => {\n    api\n      .get(`/pets/${id}`, {\n        headers: {\n          Authorization: `Bearer ${JSON.parse(token)}`,\n        },\n      })\n      .then((response) => {\n        setPet(response.data.pet)\n      })\n  }, [token, id])\n\n  async function updatePet(pet) {\n    let msgType = 'success'\n\n    const formData = new FormData()\n\n    const petFormData = await Object.keys(pet).forEach((key) => {\n      if (key === 'images') {\n        for (let i = 0; i < pet[key].length; i++) {\n          formData.append(`images`, pet[key][i])\n        }\n      } else {\n        formData.append(key, pet[key])\n      }\n    })\n\n    formData.append('pet', petFormData)\n\n    const data = await api\n      .patch(`pets/${pet._id}`, formData, {\n        headers: {\n          Authorization: `Bearer ${JSON.parse(token)}`,\n          'Content-Type': 'multipart/form-data',\n        },\n      })\n      .then((response) => {\n        return response.data\n      })\n      .catch((err) => {\n        msgType = 'error'\n        return err.response.data\n      })\n\n    setFlashMessage(data.message, msgType)\n  }\n\n  return (\n    <section>\n      <div className={styles.addpet_header}>\n        <h1>Editando o Pet: {pet.name}</h1>\n        <p>Depois da edição os dados serão atualizados no sistema</p>\n      </div>\n      {pet.name && (\n        <PetForm handleSubmit={updatePet} petData={pet} btnText=\"Editar\" />\n      )}\n    </section>\n  )\n}\n\nexport default EditPet\n"]},"metadata":{},"sourceType":"module"}