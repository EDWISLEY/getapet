{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport api from '../utils/api';\nimport { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport useFlashMessage from './useFlashMessage';\nexport default function useAuth() {\n  _s();\n\n  const [authenticated, setAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const history = useHistory();\n  const {\n    setFlashMessage\n  } = useFlashMessage();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      api.defaults.headers.Authorization = `Bearer ${JSON.parse(token)}`;\n      setAuthenticated(true);\n    }\n\n    setLoading(false);\n  }, []);\n\n  async function register(user) {\n    let msgText = 'Cadastro realizado com sucesso!';\n    let msgType = 'success';\n\n    try {\n      const data = await api.post('/users/register', user).then(response => {\n        return response.data;\n      });\n      await authUser(data);\n    } catch (error) {\n      // tratar erro\n      msgText = error.response.data.message;\n      msgType = 'error';\n    }\n\n    setFlashMessage(msgText, msgType);\n  }\n\n  async function login(user) {\n    let msgText = 'Login realizado com sucesso!';\n    let msgType = 'success';\n\n    try {\n      const data = await api.post('/users/login', user).then(response => {\n        return response.data;\n      });\n      await authUser(data);\n    } catch (error) {\n      // tratar erro\n      msgText = error.response.data.message;\n      msgType = 'error';\n    }\n\n    setFlashMessage(msgText, msgType);\n  }\n\n  async function authUser(data) {\n    setAuthenticated(true);\n    localStorage.setItem('token', JSON.stringify(data.token));\n    history.push('/');\n  }\n\n  function logout() {\n    const msgText = 'Logout realizado com sucesso!';\n    const msgType = 'success';\n    setAuthenticated(false);\n    localStorage.removeItem('token');\n    api.defaults.headers.Authorization = undefined;\n    history.push('/login');\n    setFlashMessage(msgText, msgType);\n  }\n\n  return {\n    authenticated,\n    loading,\n    register,\n    login,\n    logout\n  };\n}\n\n_s(useAuth, \"i+Mz5yG1q5f3tBX1W7SFiI0+gdA=\", false, function () {\n  return [useHistory, useFlashMessage];\n});","map":{"version":3,"sources":["C:/Users/edwis/Documents/CURSOS EM GERAL/Curso Node.js do Zero a Maestria com diversos Projetos/15_GET_A_PET_1/frontend/src/hooks/useAuth.js"],"names":["api","useState","useEffect","useHistory","useFlashMessage","useAuth","authenticated","setAuthenticated","loading","setLoading","history","setFlashMessage","token","localStorage","getItem","defaults","headers","Authorization","JSON","parse","register","user","msgText","msgType","data","post","then","response","authUser","error","message","login","setItem","stringify","push","logout","removeItem","undefined"],"mappings":"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","sourcesContent":["import api from '../utils/api'\n\nimport { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport useFlashMessage from './useFlashMessage'\n\nexport default function useAuth() {\n  const [authenticated, setAuthenticated] = useState(false)\n  const [loading, setLoading] = useState(true)\n  const history = useHistory()\n  const { setFlashMessage } = useFlashMessage()\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n\n    if (token) {\n      api.defaults.headers.Authorization = `Bearer ${JSON.parse(token)}`\n      setAuthenticated(true)\n    }\n\n    setLoading(false)\n  }, [])\n\n  async function register(user) {\n    let msgText = 'Cadastro realizado com sucesso!'\n    let msgType = 'success'\n\n    try {\n      const data = await api.post('/users/register', user).then((response) => {\n        return response.data\n      })\n\n      await authUser(data)\n    } catch (error) {\n      // tratar erro\n      msgText = error.response.data.message\n      msgType = 'error'\n    }\n\n    setFlashMessage(msgText, msgType)\n  }\n\n  async function login(user) {\n    let msgText = 'Login realizado com sucesso!'\n    let msgType = 'success'\n\n    try {\n      const data = await api.post('/users/login', user).then((response) => {\n        return response.data\n      })\n\n      await authUser(data)\n    } catch (error) {\n      // tratar erro\n      msgText = error.response.data.message\n      msgType = 'error'\n    }\n\n    setFlashMessage(msgText, msgType)\n  }\n\n  async function authUser(data) {\n    setAuthenticated(true)\n    localStorage.setItem('token', JSON.stringify(data.token))\n\n    history.push('/')\n  }\n\n  function logout() {\n    const msgText = 'Logout realizado com sucesso!'\n    const msgType = 'success'\n\n    setAuthenticated(false)\n    localStorage.removeItem('token')\n    api.defaults.headers.Authorization = undefined\n    history.push('/login')\n\n    setFlashMessage(msgText, msgType)\n  }\n\n  return { authenticated, loading, register, login, logout }\n}\n"]},"metadata":{},"sourceType":"module"}