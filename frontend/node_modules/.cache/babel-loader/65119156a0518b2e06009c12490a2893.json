{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\edwis\\\\Downloads\\\\GET_A_PET-reset\\\\frontend\\\\src\\\\components\\\\pages\\\\Pet\\\\AddPet.js\",\n  _s = $RefreshSig$();\nimport api from '../../../utils/api';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styles from './AddPet.module.css';\nimport PetForm from '../../form/PetForm';\n\n/* hooks */\nimport useFlashMessage from '../../../hooks/useFlashMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddPet() {\n  _s();\n  const [token] = useState(localStorage.getItem('token') || '');\n  const {\n    setFlashMessage\n  } = useFlashMessage();\n  const navigate = useNavigate();\n  async function registerPet(pet) {\n    let msgType = 'success';\n    const formData = new FormData();\n    const petFormData = await Object.keys(pet).forEach(key => {\n      if (key === 'images') {\n        for (let i = 0; i < pet[key].length; i++) {\n          formData.append(`images`, pet[key][i]);\n        }\n      } else {\n        formData.append(key, pet[key]);\n      }\n    });\n    formData.append('pet', petFormData);\n    const data = await api.post(`pets/create`, formData, {\n      headers: {\n        Authorization: `Bearer ${JSON.parse(token)}`,\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      console.log(response.data);\n      return response.data;\n    }).catch(err => {\n      console.log(err);\n      msgType = 'error';\n      return err.response.data;\n    });\n    setFlashMessage(data.message, msgType);\n    if (msgType !== 'error') {\n      navigate('/pet/mypets');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.addpet_header,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cadastre um Pet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Depois ele ficar\\xE1 dispon\\xEDvel para ado\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PetForm, {\n      handleSubmit: registerPet,\n      btnText: \"Cadastrar Pet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(AddPet, \"F3Wkv7maIKHkILwMq639nlcSuF0=\", false, function () {\n  return [useFlashMessage, useNavigate];\n});\n_c = AddPet;\nexport default AddPet;\nvar _c;\n$RefreshReg$(_c, \"AddPet\");","map":{"version":3,"names":["api","useState","useNavigate","styles","PetForm","useFlashMessage","AddPet","token","localStorage","getItem","setFlashMessage","navigate","registerPet","pet","msgType","formData","FormData","petFormData","Object","keys","forEach","key","i","length","append","data","post","headers","Authorization","JSON","parse","then","response","console","log","catch","err","message","addpet_header"],"sources":["C:/Users/edwis/Downloads/GET_A_PET-reset/frontend/src/components/pages/Pet/AddPet.js"],"sourcesContent":["import api from '../../../utils/api'\n\nimport { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport styles from './AddPet.module.css'\n\nimport PetForm from '../../form/PetForm'\n\n/* hooks */\nimport useFlashMessage from '../../../hooks/useFlashMessage'\n\nfunction AddPet() {\n  const [token] = useState(localStorage.getItem('token') || '')\n  const { setFlashMessage } = useFlashMessage()\n  const navigate = useNavigate()\n\n  async function registerPet(pet) {\n    let msgType = 'success'\n\n    const formData = new FormData()\n\n    const petFormData = await Object.keys(pet).forEach((key) => {\n      if (key === 'images') {\n        for (let i = 0; i < pet[key].length; i++) {\n          formData.append(`images`, pet[key][i])\n        }\n      } else {\n        formData.append(key, pet[key])\n      }\n    })\n\n    formData.append('pet', petFormData)\n\n    const data = await api\n      .post(`pets/create`, formData, {\n        headers: {\n          Authorization: `Bearer ${JSON.parse(token)}`,\n          'Content-Type': 'multipart/form-data',\n        },\n      })\n      .then((response) => {\n        console.log(response.data)\n        return response.data\n      })\n      .catch((err) => {\n        console.log(err)\n        msgType = 'error'\n        return err.response.data\n      })\n\n    setFlashMessage(data.message, msgType)\n\n    if (msgType !== 'error'){\n      navigate('/pet/mypets')\n    }\n    \n  }\n\n  return (\n    <section>\n      <div className={styles.addpet_header}>\n        <h1>Cadastre um Pet</h1>\n        <p>Depois ele ficará disponível para adoção</p>\n      </div>\n      <PetForm handleSubmit={registerPet} btnText=\"Cadastrar Pet\" />\n    </section>\n  )\n}\n\nexport default AddPet\n"],"mappings":";;AAAA,OAAOA,GAAG,MAAM,oBAAoB;AAEpC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,OAAOC,MAAM,MAAM,qBAAqB;AAExC,OAAOC,OAAO,MAAM,oBAAoB;;AAExC;AACA,OAAOC,eAAe,MAAM,gCAAgC;AAAA;AAE5D,SAASC,MAAM,GAAG;EAAA;EAChB,MAAM,CAACC,KAAK,CAAC,GAAGN,QAAQ,CAACO,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;EAC7D,MAAM;IAAEC;EAAgB,CAAC,GAAGL,eAAe,EAAE;EAC7C,MAAMM,QAAQ,GAAGT,WAAW,EAAE;EAE9B,eAAeU,WAAW,CAACC,GAAG,EAAE;IAC9B,IAAIC,OAAO,GAAG,SAAS;IAEvB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAE/B,MAAMC,WAAW,GAAG,MAAMC,MAAM,CAACC,IAAI,CAACN,GAAG,CAAC,CAACO,OAAO,CAAEC,GAAG,IAAK;MAC1D,IAAIA,GAAG,KAAK,QAAQ,EAAE;QACpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,GAAG,CAACQ,GAAG,CAAC,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;UACxCP,QAAQ,CAACS,MAAM,CAAE,QAAO,EAAEX,GAAG,CAACQ,GAAG,CAAC,CAACC,CAAC,CAAC,CAAC;QACxC;MACF,CAAC,MAAM;QACLP,QAAQ,CAACS,MAAM,CAACH,GAAG,EAAER,GAAG,CAACQ,GAAG,CAAC,CAAC;MAChC;IACF,CAAC,CAAC;IAEFN,QAAQ,CAACS,MAAM,CAAC,KAAK,EAAEP,WAAW,CAAC;IAEnC,MAAMQ,IAAI,GAAG,MAAMzB,GAAG,CACnB0B,IAAI,CAAE,aAAY,EAAEX,QAAQ,EAAE;MAC7BY,OAAO,EAAE;QACPC,aAAa,EAAG,UAASC,IAAI,CAACC,KAAK,CAACvB,KAAK,CAAE,EAAC;QAC5C,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACDwB,IAAI,CAAEC,QAAQ,IAAK;MAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACP,IAAI,CAAC;MAC1B,OAAOO,QAAQ,CAACP,IAAI;IACtB,CAAC,CAAC,CACDU,KAAK,CAAEC,GAAG,IAAK;MACdH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;MAChBtB,OAAO,GAAG,OAAO;MACjB,OAAOsB,GAAG,CAACJ,QAAQ,CAACP,IAAI;IAC1B,CAAC,CAAC;IAEJf,eAAe,CAACe,IAAI,CAACY,OAAO,EAAEvB,OAAO,CAAC;IAEtC,IAAIA,OAAO,KAAK,OAAO,EAAC;MACtBH,QAAQ,CAAC,aAAa,CAAC;IACzB;EAEF;EAEA,oBACE;IAAA,wBACE;MAAK,SAAS,EAAER,MAAM,CAACmC,aAAc;MAAA,wBACnC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAwB,eACxB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA+C;IAAA;MAAA;MAAA;MAAA;IAAA,QAC3C,eACN,QAAC,OAAO;MAAC,YAAY,EAAE1B,WAAY;MAAC,OAAO,EAAC;IAAe;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACtD;AAEd;AAAC,GAxDQN,MAAM;EAAA,QAEeD,eAAe,EAC1BH,WAAW;AAAA;AAAA,KAHrBI,MAAM;AA0Df,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module"}